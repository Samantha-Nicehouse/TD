package com.example.treasuredetector;


import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import android.Manifest;
import android.location.LocationManager;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import com.example.treasuredetector.view_model.GeopointViewModel;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import static android.widget.Toast.*;

public class MapsFragment extends Fragment {

    private static final String TAG = "MapsFragment";
    private FusedLocationProviderClient mFusedLocationProviderClient;
    LocationManager locationManager;
    private GoogleMap mMap;
   public GeopointViewModel geopointViewModel;

    private  static final String FINE_LOCATION = Manifest.permission.ACCESS_FINE_LOCATION;
    private static final String COURSE_LOCATION = Manifest.permission.ACCESS_COARSE_LOCATION;
    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1234;

    private final OnMapReadyCallback callback = new OnMapReadyCallback() {

        /**
         * Manipulates the map once available.
         * This callback is triggered when the map is ready to be used.
         * This is where we can add markers or lines, add listeners or move the camera.
         * In this case, we just add a marker near Aarhus, DK
         * If Google Play services is not installed on the device, the user will be prompted to
         * install it inside the SupportMapFragment. This method will only be triggered once the
         * user has installed Google Play services and returned to the app.
         */

        /*some of this code was autogenerated by FragmentMap selection*/
        @Override
        public void onMapReady(GoogleMap googleMap) {
            Toast.makeText(getContext(), "Map is Ready", LENGTH_SHORT).show();
            Log.d(TAG, "onMapReady: Map is Ready");
            //when map is loaded
            mMap = googleMap;


            //when map is loaded
            googleMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
                @Override
                public void onMapClick(LatLng latLng) {
                    //when clicked on map
                    //initialize marker options
                    MarkerOptions markerOptions = new MarkerOptions();
                    //set position of marker
                    markerOptions.position(latLng);
                    //Set title of marker
                    MarkerOptions title = markerOptions.title(latLng.latitude + ": " + latLng.longitude);
                    //remove all marker
                    googleMap.clear();
                    //Animating to zoom the marker
                    googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(
                            latLng, 10
                    ));
                    //Add marker on map
                    googleMap.addMarker(title);

                }
            });
            LatLng aarhus = new LatLng(56, 10);

            googleMap.addMarker(new MarkerOptions().position(aarhus).title("Marker in Aarhus"));
            googleMap.moveCamera(CameraUpdateFactory.newLatLng(aarhus));
        }
    };



    private Boolean mLocationPermissionGranted = false;

    /*this code was autogenerated by FragmentMap selection*/
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater,
                             @Nullable ViewGroup container,
                             @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_maps, container, false);
    }

    /*this code was autogenerated by FragmentMap selection*/
    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        SupportMapFragment mapFragment =
                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.google_map);
        if (mapFragment != null) {
            mapFragment.onCreate(savedInstanceState);
            mapFragment.onResume();
            mapFragment.getMapAsync(callback);

        }
    }



}









